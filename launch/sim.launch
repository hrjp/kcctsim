<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->

  <!--Robot Model-->
  <arg name="model" default="$(find kcctsim)/robots/naviton.urdf.xacro"/>
  <!--Gazebo World file-->
  <arg name="world_name" default="$(find kcctsim)/worlds/clearpath_playpen.world"/>


  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	<arg name="world_name" value="$(arg world_name)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- lrf merger -->
 <!--- <include file="$(find fourth_robot_bringup)/launch/sensors/lrf_merger.launch"/>-->


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
		 command="$(find xacro)/xacro.py '$(arg model)'" />
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  		args="-urdf -model naviton -param robot_description"/>
 
  <!-- ros_control motoman launch file -->
  <include file="$(find kcctsim)/launch/robot_control.launch"/>

  <!--<node pkg="kcctsim" name="twist_remapper" type="twist_remapper.py" output="screen">
	<remap from="cmd_vel" to="final_cmd_vel" />
	</node>-->

  <node pkg="kcctsim" name="twist_joy_selector" type="twist_joy_selecter" output="screen">
	<remap from="cmd_vel" to="final_cmd_vel" />
	</node>
  <node name="joy_node" pkg="joy" type="joy_node" />
	<node pkg="kcctsim" name="linear_vel_node" type="linear_vel_node.py" output="screen"/>

  
</launch>
